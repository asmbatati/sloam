<?xml version="1.0"?>
<launch>
  <!-- Load PID gains for Gazebo controller -->
  <rosparam file="$(find forest_simulation)/config/husky_control.yaml" command="load" />
  <!-- <rosparam file="$(find forest_simulation)/config/husky_control_pid.yaml" command="load" /> -->
  <rosparam file="$(find forest_simulation)/config/twist_mux.yaml" command="load" />

  <!-- Load SLOAM configuration from YAML file -->
  <rosparam file="$(find sloam)/params/husky.yaml" command="load" />

  <!-- Start Gazebo with the forest world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- First load the Husky URDF model directly instead of using spawn_husky.launch -->
  <param name="robot_description" 
         command="$(find xacro)/xacro '$(find husky_description)/urdf/husky.urdf.xacro'" />

  <!-- Spawn the Husky in Gazebo without launching its default controllers -->
  <node name="spawn_husky_model" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -param robot_description -model husky -x 0 -y 0 -z 0.1 -Y 0" />

  <!-- Use joint_state_publisher for joint states -->
  <node name="custom_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
    <param name="rate" value="50"/>
  </node>

  <!-- Robot state publisher for TF -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- Spawn just the velocity controller -->
  <node name="custom_controller_spawner" pkg="controller_manager" type="spawner" 
        args="husky_velocity_controller" />

  <!-- Launch EKF for localization -->
  <node name="ekf_localization" pkg="robot_localization" type="ekf_localization_node" clear_params="true"/>

  <!-- Launch RVIZ for visualization -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find forest_simulation)/rviz/forest_robot.rviz" required="true" />
  
  <!-- Teleop control -->
  <node name="teleop_twist_keyboard" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen">
    <remap from="cmd_vel" to="teleop_twist_keyboard/cmd_vel"/>
  </node>

  <!-- Interactive marker for control -->
  <node name="twist_marker_server" pkg="interactive_marker_twist_server" type="marker_server">
    <remap from="cmd_vel" to="twist_marker_server/cmd_vel"/>
  </node>

  <!-- Twist mux for combining motion commands -->
  <node name="twist_mux" pkg="twist_mux" type="twist_mux" />
  
  <!-- Remap the final output to the robot's input -->
  <remap from="/twist_mux/cmd_vel" to="/husky_velocity_controller/cmd_vel" />
</launch>